exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]
line-length = 120
indent-width = 4
target-version = "py37"

[lint]
# Select All rules
select = ["ALL"]
# Ignore: D - pydocstyle, G - flake8-logging-format ,FA100 - New  style typing
# ANN - Typing
ignore = [
  "ERA001", "D", "TD",   # Keep (maybe)

  # Remove when possible. Also, think a little before removing.
  "G", "FA100", "ANN", "PTH", "FBT001", "FBT002", "PLR2004", "S608",
  "S113", "PLR0913", "TRY002", "PERF401", "C901", "B904", "PLR0915", "BLE001",
  "DTZ007", "S104", "PLR0912", "S301", "FIX002"
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# 4. Ignore `E402` (import violations) in all `__init__.py` files
per-file-ignores = {"__init__.py" = ["E402"], "tests/*" = ["S101"]}

[format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
